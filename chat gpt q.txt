
#css/style.css

/* css/style.css - Trial LMS (modern, responsive) */
:root{
  --bg:#2ea15a; --panel:#2ea15a; --muted:#b7c1e6; --text:#ffffff;
  --accent:#6c8bff; --accent2:#4de2b9; --ok:#34d399; --danger:#ff6b7a;
  --glass: rgba(255,255,255,0.03); --radius:12px; --shadow: 0 10px 30px rgba(2,6,23,0.6);
  --maxw:1200px;
}
*{box-sizing:border-box}
html,body{height:100%;margin:0;font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;color:var(--text);background:#2ea15a;-webkit-font-smoothing:antialiased}
a{color:#0f1528}
.container{max-width:var(--maxw);margin:20px auto;padding:16px;display:grid;gap:18px}

/* topbar */
.topbar{
  display:flex;justify-content:space-between;align-items:center;padding:12px 16px;background:linear-gradient(180deg,rgba(255,255,255,0.02),transparent);border-radius:12px;border:1px solid rgba(255,255,255,0.02);
}
.brand{display:flex;gap:12px;align-items:center}
.logo{width:44px;height:44px;border-radius:10px;background:#3f588a}
/* menu */
.menu{display:flex;gap:8px;align-items:center}
.menu a, .menu button{padding:8px 12px;border-radius:10px;background:transparent;border:0;color:#0f1528;cursor:pointer;font-weight:700}
.menu a.active{background:linear-gradient(90deg,#0f1528,#0f1528);color:#2ea15a}

/* layout */
.layout{display:grid;grid-template-columns:260px 1fr;gap:18px;align-items:start}
.sidebar{background:var(--panel);padding:14px;border-radius:12px;border:1px solid rgba(255,255,255,0.02)}
.sidebar .user{display:flex;gap:10px;align-items:center;margin-bottom:12px}
.user .avatar{width:48px;height:48px;border-radius:8px;background:#0f1528}
.side-nav{display:flex;flex-direction:column;gap:8px}
.side-nav a{display:flex;justify-content:space-between;padding:10px;border-radius:10px;background:linear-gradient(180deg, rgba(255,255,255,0.01), transparent);text-decoration:none;color:var(--muted);border:1px solid rgba(255,255,255,0.02)}
.side-nav a[aria-current="page"]{outline:2px solid rgba(108,139,255,0.12);color:var(--text)}

/* content */
.card{background:linear-gradient(180deg, rgba(255,255,255,0.01), transparent);padding:18px;border-radius:12px;border:1px solid rgba(255,255,255,0.02)}
.content h1{margin:0 0 8px}
.lead{color:var(--muted);margin-bottom:12px}

/* quiz */
.quiz{display:grid;gap:12px}
.question{background:var(--panel);padding:12px;border-radius:10px;border:1px solid rgba(255,255,255,0.02)}
.q-title{font-weight:700;margin-bottom:8px}
.options{display:grid;gap:8px}
.option{display:flex;gap:10px;align-items:flex-start;padding:10px;border-radius:10px;border:1px solid rgba(255,255,255,0.02);cursor:pointer}
.option.correct{border-color:rgba(52,211,153,0.35);background:linear-gradient(90deg, rgba(52,211,153,0.04), transparent)}
.option.wrong{border-color:rgba(255,90,122,0.22);background:linear-gradient(90deg, rgba(255,90,122,0.03), transparent)}
.feedback{font-size:14px;color:var(--muted);margin-top:8px}

/* progress widgets */
.progress-row{display:flex;gap:12px;align-items:center;flex-wrap:wrap;margin-top:12px}
.linear{flex:1;height:14px;background:rgba(255,255,255,0.02);border-radius:10px;overflow:hidden;border:1px solid rgba(255,255,255,0.02)}
.linear .bar{height:100%;width:0%;background:linear-gradient(90deg,#0f1528,#0f1528);transition:width .35s ease}
.circular{width:92px;height:92px;position:relative;display:inline-grid;place-items:center}
.circular svg{transform:rotate(-90deg)}
.circular .value{position:absolute;font-weight:800}
.stepper{display:flex;gap:8px}
.step{padding:6px 10px;border-radius:999px;border:1px dashed rgba(255,255,255,0.04);color:var(--muted)}
.step.done{border-style:solid;background:linear-gradient(90deg, rgba(108,139,255,0.06), transparent);color:var(--text)}
.animated{height:10px;border-radius:999px;background:repeating-linear-gradient(45deg, rgba(108,139,255,0.05) 0 10px, rgba(77,226,185,0.04) 10px 20px);position:relative;overflow:hidden;border:1px solid rgba(255,255,255,0.02)}
.animated .runner{position:absolute;inset:0;width:0%;transition:width .35s ease;background:linear-gradient(90deg,#0f1528,#0f1528)}

/* forum */
.forum{margin-top:14px}
.forum .messages{max-height:260px;overflow:auto;padding:8px;border-radius:10px;background:var(--panel);border:1px solid rgba(255,255,255,0.02)}
.msg{padding:10px;border-bottom:1px dashed rgba(255,255,255,0.02)}
.msg .meta{display:flex;gap:8px;color:var(--muted);font-size:13px}
.msg .text{margin-top:6px;color:var(--muted)}

/* buttons + small util */
.btn{background:#3f588a;color:#ffffff;padding:8px 12px;border-radius:10px;border:0;cursor:pointer;font-weight:700}
.btn.ghost{background:transparent;border:1px solid rgba(255,255,255,0.03);color:var(--muted)}

/* welcome/login page */
.welcome{display:grid;place-items:center;height:80vh}
.login-card{display:grid;grid-template-columns:1fr 360px;gap:18px;align-items:center}
.login-form input{width:100%;padding:10px;margin-bottom:10px;border-radius:8px;border:1px solid rgba(255,255,255,0.03);background:rgba(255,255,255,0,5);color:#000000}
.error{color:#000000}

/* responsive */
@media (max-width:960px){
  .layout{grid-template-columns:1fr}
  .login-card{grid-template-columns:1fr}
  .topbar{flex-direction:column;gap:12px}
  .menu{flex-wrap:wrap}
}


#index.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>Trial LMS — Welcome</title><link rel="stylesheet" href="css/style.css"></head>
<body>
  <div class="welcome">
    <div class="container login-card">
      <div class="card welcome-hero">
        <h1>Welcome to Trial LMS-Ayele Bedada</h1>
        <p class="lead">A modern demo learning environment for students and staff. Sign in to begin.</p>
        <p class="muted">Demo note: authentication runs in the browser;</p>
      </div>
      <div class="card login-box">
        <h2>Sign in</h2>
        <form id="loginForm" class="login-form">
          <input id="email" placeholder="Email" type="email" required>
          <input id="password" placeholder="Password" type="password" required>
          <button class="btn" type="submit">Login</button>
          <div id="loginError" class="error" role="alert" aria-live="polite"></div>
        </form>
       <!--     <hr style="opacity:.06;margin:12px 0">
  <div> </div>  -->
      </div>
    </div>
  </div>
<script src="js/auth.js"></script>
</body>
</html>

#dashboard.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>Trial LMS — Dashboard</title><link rel="stylesheet" href="css/style.css"></head>
<body data-page="dashboard">
  <div class="container">
    <header class="topbar"></header>
    <div class="layout">
      <aside class="sidebar"></aside>
      <main>
        <div class="card">
          <h1>School of Architecture — Introduction</h1>
          <p class="lead">This course introduces architectural thinking, materials, environment and design strategies.</p>
          <p>How to use the site: use the left navigation to jump between lessons. Complete quizzes to get a global progress score shown in the sidebar. Admin controls allow opening/closing quizzes and viewing reports.</p>
          <p>Navigation tips: Try Lesson 1, Lesson 2 and then Lesson 3. You have up to 3 attempts per quiz. Progress updates live while you answer. Forums on each lesson are for discussions.</p>
        </div>

        <div class="card" style="margin-top:12px">
          <h3>Live Progress</h3>
          <div class="progress-row">
            <div class="linear" role="progressbar" aria-valuemin="0" aria-valuemax="100"><div class="bar"></div></div>
            <div class="circular" aria-hidden="false">
              <svg width="92" height="92" viewBox="0 0 100 100">
                <circle cx="50" cy="50" r="42" stroke="rgba(255,255,255,0.06)" stroke-width="10" fill="none"></circle>
                <circle class="progress-fill" cx="50" cy="50" r="42" stroke="url(#g1)" stroke-width="10" stroke-linecap="round" fill="none"></circle>
                <defs><linearGradient id="g1"><stop offset="0%" stop-color="#6c8bff"/><stop offset="100%" stop-color="#4de2b9"/></linearGradient></defs>
              </svg>
              <div class="value circular value">0%</div>
            </div>
          </div>
          <div class="stepper" style="margin-top:12px"></div>
          <div class="animated" style="margin-top:12px"><div class="runner"></div></div>
        </div>
      </main>
    </div>
  </div>

<script src="js/auth.js"></script>
<script src="js/lms.js"></script>
<script>
  // protect and render chrome
  document.addEventListener('DOMContentLoaded', ()=>{
    AUTH.renderChrome('dashboard');
    // init live widgets based on session
    const s = AUTH.getSession();
    if(!s) return;
    const global = LMS.globalPercentFor(s.email);
    LMS.updateLinear('.linear', global); LMS.updateAnimated('.animated', global); LMS.updateCircular('.circular', global); LMS.updateStepper('.stepper', Math.round((global/100)*4));
  });
</script>
</body>
</html>


#lesson1.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>Trial LMS — Lesson 1</title><link rel="stylesheet" href="css/style.css"></head>
<body data-page="lesson1">
  <div class="container">
    <header class="topbar"></header>
    <div class="layout">
      <aside class="sidebar"></aside>
      <main>
        <div class="card">
          <h1>Lesson 1 — Architecture Basics</h1>
          <p class="lead">Architecture integrates form, function and context. Designers balance usability, safety and aesthetics.</p>
          <p>Materials like timber, steel and concrete have distinct properties that affect design choices.</p>
          <p>Site analysis (orientation, wind, topography) informs passive design strategies for comfort and energy efficiency.</p>
        </div>



        <div class="card" style="margin-top:12px">
          <h2>Quiz 1 (4 questions · 40%)</h2>
          <div id="quiz1-block">
            <!-- sample question structure (JS will create) -->
          </div>
          <div class="row" style="margin-top:12px">
            <button class="submitAttempt" class="btn">Submit Attempt</button>
            <div style="margin-left:auto"><strong>Attempts:</strong> <span class="attemptBadge">0/3</span></div>
          </div>

          <div class="row" style="margin-top:12px">
            <div><strong>Live potential:</strong> <span class="livePotential">0%</span></div>
            <div style="margin-left:12px"><strong>Quiz score:</strong> <span class="quizScore">0%</span></div>
            <div style="margin-left:auto"><strong>Overall:</strong> <span class="globalScore">0%</span></div>
          </div>

          <div style="margin-top:12px" class="progress-row">
            <div class="linear" role="progressbar" aria-valuemin="0" aria-valuemax="100"><div class="bar"></div></div>
            <div class="circular"><svg width="92" height="92" viewBox="0 0 100 100"><circle cx="50" cy="50" r="42" stroke="rgba(255,255,255,0.06)" stroke-width="10" fill="none"></circle><circle class="progress-fill" cx="50" cy="50" r="42" stroke="url(#g2)" stroke-width="10" stroke-linecap="round" fill="none"></circle></svg><div class="value">0%</div></div>
          </div>
          <div class="stepper" style="margin-top:12px"></div>
          <div class="animated" style="margin-top:12px"><div class="runner"></div></div>
        </div>

        <div class="card forum" style="margin-top:12px">
          <h3>Discussion Forum</h3>
          <div id="quiz1-forum-messages" class="messages"></div>
          <textarea id="quiz1-forum-input" placeholder="Write a message..."></textarea>
          <div style="margin-top:8px"><button id="quiz1-forum-post" class="btn">Post</button></div>
        </div>

      </main>
    </div>
  </div>

<script src="js/auth.js"></script>
<script src="js/lms.js"></script>
<script src="js/quiz.js"></script>
<script src="js/forum.js"></script>
<script>
document.addEventListener('DOMContentLoaded', ()=>{
  // ensure auth UI
  AUTH.renderChrome('lesson1');

  // create quiz content programmatically so structure is consistent
  const quiz1HTML = `
    <div class="question" data-name="q1" data-type="radio" data-answer="b">
      <div class="q-title">1) Architecture balances:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q1" value="a"> Cost only</label>
        <label class="option"><input type="radio" name="q1" value="b"> Usability, safety, and aesthetics</label>
        <label class="option"><input type="radio" name="q1" value="c"> Ornament over function</label>
      </div>
      <div class="feedback"></div>
    </div>

    <div class="question" data-name="q2" data-type="radio" data-answer="c">
      <div class="q-title">2) Material selection key factor:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q2" value="a"> Popularity</label>
        <label class="option"><input type="radio" name="q2" value="b"> Only color</label>
        <label class="option"><input type="radio" name="q2" value="c"> Span, load, durability, carbon impact</label>
      </div>
      <div class="feedback"></div>
    </div>

    <div class="question" data-name="q3" data-type="radio" data-answer="a">
      <div class="q-title">3) Passive strategy example:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q3" value="a"> External shading and insulation</label>
        <label class="option"><input type="radio" name="q3" value="b"> Oversized mechanical systems</label>
        <label class="option"><input type="radio" name="q3" value="c"> Extra decorative lighting</label>
      </div>
      <div class="feedback"></div>
    </div>

    <div class="question" data-name="q4" data-type="multi" data-answer="orientation|topography">
      <div class="q-title">4) Select all that inform site analysis:</div>
      <div class="options">
        <label class="option"><input type="checkbox" name="q4" value="orientation"> Sun orientation</label>
        <label class="option"><input type="checkbox" name="q4" value="brand"> Brand identity</label>
        <label class="option"><input type="checkbox" name="q4" value="topography"> Topography</label>
      </div>
      <div class="feedback"></div>
    </div>
  `;
  document.getElementById('quiz1-block').innerHTML = quiz1HTML;

  // initialize Quiz engine for this container
  const container = document.getElementById('quiz1-block');
  Quiz.initQuizPage(container, 'quiz1');

  // wire forum
  document.getElementById('quiz1-forum-post').addEventListener('click', ()=>{ FORUM.post('quiz1', document.getElementById('quiz1-forum-input').value); document.getElementById('quiz1-forum-input').value=''; });
  FORUM.render('quiz1');
});
</script>
</body>
</html>

#lesson2.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>Trial LMS — Lesson 2</title><link rel="stylesheet" href="css/style.css"></head>
<body data-page="lesson2">
  <div class="container">
    <header class="topbar"></header>
    <div class="layout">
      <aside class="sidebar"></aside>
      <main>
        <div class="card">
          <h1>Lesson 2 — Further Facts 1</h1>
          <p class="lead">Structural systems, building envelopes and digital workflows shape modern architectural practice.</p>
          <p>High-performance façades combine airtight layers, thermal breaks and shading for energy performance.</p>
          <p>Parametric tools and BIM support coordination and performance simulation.</p>
        </div>




        <div class="card" style="margin-top:12px">
          <h2>Quiz 2 (6 questions · 30%)</h2>
          <div id="quiz2-block"></div>
          <div class="row" style="margin-top:12px">
            <button class="submitAttempt" class="btn">Submit Attempt</button>
            <div style="margin-left:auto"><strong>Attempts:</strong> <span class="attemptBadge">0/3</span></div>
          </div>

          <div class="row" style="margin-top:12px">
            <div><strong>Live potential:</strong> <span class="livePotential">0%</span></div>
            <div style="margin-left:12px"><strong>Quiz score:</strong> <span class="quizScore">0%</span></div>
            <div style="margin-left:auto"><strong>Overall:</strong> <span class="globalScore">0%</span></div>
          </div>

          <div style="margin-top:12px" class="progress-row">
            <div class="linear"><div class="bar"></div></div>
            <div class="circular"><svg width="92" height="92" viewBox="0 0 100 100"><circle cx="50" cy="50" r="42" stroke="rgba(255,255,255,0.06)" stroke-width="10" fill="none"></circle><circle class="progress-fill" cx="50" cy="50" r="42" stroke="url(#g3)" stroke-width="10" stroke-linecap="round" fill="none"></circle></svg><div class="value">0%</div></div>
          </div>
          <div class="stepper" style="margin-top:12px"></div>
          <div class="animated" style="margin-top:12px"><div class="runner"></div></div>
        </div>

        <div class="card forum" style="margin-top:12px">
          <h3>Discussion Forum</h3>
          <div id="quiz2-forum-messages" class="messages"></div>
          <textarea id="quiz2-forum-input" placeholder="Write a message..."></textarea>
          <div style="margin-top:8px"><button id="quiz2-forum-post" class="btn">Post</button></div>
        </div>

      </main>
    </div>
  </div>

<script src="js/auth.js"></script>
<script src="js/lms.js"></script>
<script src="js/quiz.js"></script>
<script src="js/forum.js"></script>
<script>
document.addEventListener('DOMContentLoaded', ()=>{
  AUTH.renderChrome('lesson2');
  // build quiz2 DOM
  const quiz2HTML = `
    <div class="question" data-name="q1" data-type="radio" data-answer="b">
      <div class="q-title">1) Frames, shells, tensile systems differ by:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q1" value="a"> Interior finishes</label>
        <label class="option"><input type="radio" name="q1" value="b"> How they carry and distribute loads</label>
        <label class="option"><input type="radio" name="q1" value="c"> Window shapes</label>
      </div><div class="feedback"></div>
    </div>

    <div class="question" data-name="q2" data-type="radio" data-answer="a">
      <div class="q-title">2) Aligning load paths leads to:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q2" value="a"> Increase efficiency</label>
        <label class="option"><input type="radio" name="q2" value="b"> Improve aesthetics only</label>
        <label class="option"><input type="radio" name="q2" value="c"> Eliminate foundations</label>
      </div><div class="feedback"></div>
    </div>

    <div class="question" data-name="q3" data-type="radio" data-answer="c">
      <div class="q-title">3) High-performance façade includes:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q3" value="a"> Uncontrolled air leakage</label>
        <label class="option"><input type="radio" name="q3" value="b"> Only thick glass</label>
        <label class="option"><input type="radio" name="q3" value="c"> Airtight layers and thermal breaks</label>
      </div><div class="feedback"></div>
    </div>

    <div class="question" data-name="q4" data-type="text" data-answer="clash detection">
      <div class="q-title">4) BIM identifies interferences known as ______ ______.</div>
      <input type="text" placeholder="answer" />
      <div class="feedback"></div>
    </div>

    <div class="question" data-name="q5" data-type="multi" data-answer="shading|ventilation">
      <div class="q-title">5) Select envelope strategies that reduce cooling loads:</div>
      <div class="options">
        <label class="option"><input type="checkbox" name="q5" value="shading"> External shading</label>
        <label class="option"><input type="checkbox" name="q5" value="glare"> Excessive glare</label>
        <label class="option"><input type="checkbox" name="q5" value="ventilation"> Night-purge ventilation</label>
      </div><div class="feedback"></div>
    </div>

    <div class="question" data-name="q6" data-type="radio" data-answer="b">
      <div class="q-title">6) Parametric modeling supports:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q6" value="a"> Manual drafting speed</label>
        <label class="option"><input class="option" type="radio" name="q6" value="b"> Rapid iteration with performance feedback</label>
        <label class="option"><input type="radio" name="q6" value="c"> Eliminating engineers</label>
      </div><div class="feedback"></div>
    </div>
  `;
  document.getElementById('quiz2-block').innerHTML = quiz2HTML;
  const container = document.getElementById('quiz2-block');
  Quiz.initQuizPage(container, 'quiz2');

  document.getElementById('quiz2-forum-post').addEventListener('click', ()=>{ FORUM.post('quiz2', document.getElementById('quiz2-forum-input').value); document.getElementById('quiz2-forum-input').value=''; });
  FORUM.render('quiz2');
});
</script>
</body>
</html>

#lesson3.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>Trial LMS — Lesson 3</title><link rel="stylesheet" href="css/style.css"></head>
<body data-page="lesson3">
  <div class="container">
    <header class="topbar"></header>
    <div class="layout">
      <aside class="sidebar"></aside>
      <main>
        <div class="card">
          <h1>Lesson 3 — Further Facts 2</h1>
          <p class="lead">Structural systems, building envelopes and digital workflows shape modern architectural practice.</p>
          <p>High-performance façades combine airtight layers, thermal breaks and shading for energy performance.</p>
          <p>Parametric tools and BIM support coordination and performance simulation.</p>
        </div>

        <div class="card" style="margin-top:12px">
          <h2>Quiz 3 (6 questions · 30%)</h2>
          <div id="quiz3-block"></div>
          <div class="row" style="margin-top:12px">
            <button class="submitAttempt" class="btn">Submit Attempt</button>
            <div style="margin-left:auto"><strong>Attempts:</strong> <span class="attemptBadge">0/3</span></div>
          </div>

          <div class="row" style="margin-top:12px">
            <div><strong>Live potential:</strong> <span class="livePotential">0%</span></div>
            <div style="margin-left:12px"><strong>Quiz score:</strong> <span class="quizScore">0%</span></div>
            <div style="margin-left:auto"><strong>Overall:</strong> <span class="globalScore">0%</span></div>
          </div>

          <div style="margin-top:12px" class="progress-row">
            <div class="linear"><div class="bar"></div></div>
            <div class="circular"><svg width="92" height="92" viewBox="0 0 100 100"><circle cx="50" cy="50" r="42" stroke="rgba(255,255,255,0.06)" stroke-width="10" fill="none"></circle><circle class="progress-fill" cx="50" cy="50" r="42" stroke="url(#g3)" stroke-width="10" stroke-linecap="round" fill="none"></circle></svg><div class="value">0%</div></div>
          </div>
          <div class="stepper" style="margin-top:12px"></div>
          <div class="animated" style="margin-top:12px"><div class="runner"></div></div>
        </div>

        <div class="card forum" style="margin-top:12px">
          <h3>Discussion Forum</h3>
          <div id="quiz3-forum-messages" class="messages"></div>
          <textarea id="quiz3-forum-input" placeholder="Write a message..."></textarea>
          <div style="margin-top:8px"><button id="quiz3-forum-post" class="btn">Post</button></div>
        </div>

      </main>
    </div>
  </div>

<script src="js/auth.js"></script>
<script src="js/lms.js"></script>
<script src="js/quiz.js"></script>
<script src="js/forum.js"></script>
<script>
document.addEventListener('DOMContentLoaded', ()=>{
  AUTH.renderChrome('lesson3');
  // build quiz3 DOM
  const quiz3HTML = `
    <div class="question" data-name="q1" data-type="radio" data-answer="b">
      <div class="q-title">1) Frames, shells, tensile systems differ by:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q1" value="a"> Interior finishes</label>
        <label class="option"><input type="radio" name="q1" value="b"> How they carry and distribute loads</label>
        <label class="option"><input type="radio" name="q1" value="c"> Window shapes</label>
      </div><div class="feedback"></div>
    </div>

    <div class="question" data-name="q2" data-type="radio" data-answer="a">
      <div class="q-title">2) Aligning load paths leads to:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q2" value="a"> Increase efficiency</label>
        <label class="option"><input type="radio" name="q2" value="b"> Improve aesthetics only</label>
        <label class="option"><input type="radio" name="q2" value="c"> Eliminate foundations</label>
      </div><div class="feedback"></div>
    </div>

    <div class="question" data-name="q3" data-type="radio" data-answer="c">
      <div class="q-title">3) High-performance façade includes:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q3" value="a"> Uncontrolled air leakage</label>
        <label class="option"><input type="radio" name="q3" value="b"> Only thick glass</label>
        <label class="option"><input type="radio" name="q3" value="c"> Airtight layers and thermal breaks</label>
      </div><div class="feedback"></div>
    </div>

    <div class="question" data-name="q4" data-type="text" data-answer="clash detection">
      <div class="q-title">4) BIM identifies interferences known as ______ ______.</div>
      <input type="text" placeholder="answer" />
      <div class="feedback"></div>
    </div>

    <div class="question" data-name="q5" data-type="multi" data-answer="shading|ventilation">
      <div class="q-title">5) Select envelope strategies that reduce cooling loads:</div>
      <div class="options">
        <label class="option"><input type="checkbox" name="q5" value="shading"> External shading</label>
        <label class="option"><input type="checkbox" name="q5" value="glare"> Excessive glare</label>
        <label class="option"><input type="checkbox" name="q5" value="ventilation"> Night-purge ventilation</label>
      </div><div class="feedback"></div>
    </div>

    <div class="question" data-name="q6" data-type="radio" data-answer="b">
      <div class="q-title">6) Parametric modeling supports:</div>
      <div class="options">
        <label class="option"><input type="radio" name="q6" value="a"> Manual drafting speed</label>
        <label class="option"><input class="option" type="radio" name="q6" value="b"> Rapid iteration with performance feedback</label>
        <label class="option"><input type="radio" name="q6" value="c"> Eliminating engineers</label>
      </div><div class="feedback"></div>
    </div>
  `;
  document.getElementById('quiz3-block').innerHTML = quiz3HTML;
  const container = document.getElementById('quiz3-block');
  Quiz.initQuizPage(container, 'quiz3');

  document.getElementById('quiz3-forum-post').addEventListener('click', ()=>{ FORUM.post('quiz3', document.getElementById('quiz3-forum-input').value); document.getElementById('quiz3-forum-input').value=''; });
  FORUM.render('quiz3');
});
</script>
</body>
</html>

#js/auth.js

// js/auth.js
// Lightweight client-side auth for Trial LMS demo
const AUTH = (function(){
  const USER_FILE = './data/users.json';
  const KEYS = {
    SESSION: 'trial.session',
    OVERRIDES: 'trial.pwd',
    SCORES: 'trial.scores',
    REPORTS: 'trial.reports',
    QUIZ_OPEN: 'trial.quizopen'
  };

  async function fetchUsers(){
    try {
      const r = await fetch(USER_FILE, {cache:'no-store'});
      if(!r.ok) throw new Error('users.json load failed');
      return await r.json();
    } catch(e){
      console.error('fetchUsers error', e);
      return [];
    }
  }

  /* session helpers */
  function setSession(obj){ localStorage.setItem(KEYS.SESSION, JSON.stringify(obj)); }
  function getSession(){ return JSON.parse(localStorage.getItem(KEYS.SESSION) || 'null'); }
  function clearSession(){ localStorage.removeItem(KEYS.SESSION); }

  function getOverrides(){ return JSON.parse(localStorage.getItem(KEYS.OVERRIDES) || '{}'); }
  function setOverride(email, pwd){ const m = getOverrides(); m[email]=pwd; localStorage.setItem(KEYS.OVERRIDES, JSON.stringify(m)); }

  /* scores */
  function ensureScores(email){
    const all = JSON.parse(localStorage.getItem(KEYS.SCORES) || '{}');
    if(!all[email]) all[email] = { quiz1:{best:0,attempts:0}, quiz2:{best:0,attempts:0}, quiz3:{best:0,attempts:0} };
    localStorage.setItem(KEYS.SCORES, JSON.stringify(all));
    return all;
  }
  function getScores(email){ ensureScores(email); return JSON.parse(localStorage.getItem(KEYS.SCORES))[email]; }
  function setScores(email, data){ const all = JSON.parse(localStorage.getItem(KEYS.SCORES) || '{}'); all[email] = data; localStorage.setItem(KEYS.SCORES, JSON.stringify(all)); }

  /* reports push */
  function pushReport(r){ const arr = JSON.parse(localStorage.getItem(KEYS.REPORTS) || '[]'); arr.unshift(r); localStorage.setItem(KEYS.REPORTS, JSON.stringify(arr.slice(0,500))); }
  function getReports(){ return JSON.parse(localStorage.getItem(KEYS.REPORTS) || '[]'); }

  /* quiz open */
  function getQuizOpen(){ return Object.assign({quiz1:true,quiz2:true,quiz3:true}, JSON.parse(localStorage.getItem(KEYS.QUIZ_OPEN) || '{}')); }
  function setQuizOpen(state){ localStorage.setItem(KEYS.QUIZ_OPEN, JSON.stringify(state)); }

  /* wire login form on index.html */
  function wireLogin(){
    const form = document.getElementById('loginForm');
    if(!form) return;
    const err = document.getElementById('loginError');
    form.addEventListener('submit', async (ev)=>{
      ev.preventDefault();
      err.textContent = '';
      const email = (document.getElementById('email').value || '').trim().toLowerCase();
      const pwd = (document.getElementById('password').value || '').trim();
      const users = await fetchUsers();
      const user = users.find(u => u.email.toLowerCase() === email);
      const overrides = getOverrides();
      const expected = overrides[email] || user?.password;
      if(user && expected && expected === pwd){
        setSession({ email: user.email, username: user.username || user.email, role: user.role || 'student', name: user.name || user.username });
        ensureScores(user.email);
        // go to dashboard
        location.href = './dashboard.html';
      } else {
        err.textContent = 'Invalid email or password (demo).';
      }
    });
  }

  /* logout helper used by pages */
  function logout(){ clearSession(); location.href = './index.html'; }

  /* change password (stored only locally) */
  function changePassword(){
    const s = getSession(); if(!s) return alert('Not signed in');
    const np = prompt('Enter new password (stored locally for demo only):');
    if(!np || np.length < 4) return alert('Password must be at least 4 characters.');
    setOverride(s.email, np);
    alert('Password updated locally.');
  }

  /* render header + sidebar on protected pages */
  function renderChrome(active){
    const session = getSession(); if(!session) return location.href='./index.html';
    // header
    const header = document.querySelector('.topbar');
    if(header){
      header.innerHTML = `
        <div class="brand">
          <div class="logo" aria-hidden="true"></div>
          <div>
            <div style="font-weight:800">Trial LMS</div>
            <div style="font-size:12px;color:var(--muted)">A demo learning environment</div>
          </div>
        </div>
        <div class="menu" role="navigation" aria-label="Main nav">
          <a href="./dashboard.html" ${active === 'dashboard' ? 'class="active"': ''}>Dashboard</a>
          <a href="./lesson1.html" ${active === 'lesson1' ? 'class="active"': ''}>Lesson 1</a>
          <a href="./lesson2.html" ${active === 'lesson2' ? 'class="active"': ''}>Lesson 2</a>
          <a href="./lesson3.html" ${active === 'lesson3' ? 'class="active"': ''}>Lesson 3</a>
          <a href="./complete.html" ${active === 'complete' ? 'class="active"': ''}>Complete</a>
          <button id="chgPwd" class="btn btn-ghost">Change password</button>
          <button id="logoutBtn" class="btn">Logout</button>
        </div>`;
      document.getElementById('logoutBtn').addEventListener('click', logout);
      document.getElementById('chgPwd').addEventListener('click', changePassword);
    }
    // sidebar
    const side = document.querySelector('.sidebar');
    if(side){
      const scores = getScores(session.email);
      const global = Math.round((scores.quiz1.best * 0.4) + (scores.quiz2.best * 0.3) + (scores.quiz3.best * 0.3));
      side.innerHTML = `
        <div class="user">
          <div class="avatar" aria-hidden="true"></div>
          <div>
            <div style="font-weight:800">${session.username}</div>
            <div style="font-size:13px;color:var(--muted)">${session.role}</div>
          </div>
        </div>
        <nav class="side-nav" aria-label="Course nav">
          <a href="./dashboard.html" aria-current="${active==='dashboard'?'page':'false'}">Intro <span class="muted">${''}</span></a>
          <a href="./lesson1.html" aria-current="${active==='lesson1'?'page':'false'}">Lesson 1 <span class="muted">${scores.quiz1.best}%</span></a>
          <a href="./lesson2.html" aria-current="${active==='lesson2'?'page':'false'}">Lesson 2 <span class="muted">${scores.quiz2.best}%</span></a>
          <a href="./lesson3.html" aria-current="${active==='lesson3'?'page':'false'}">Lesson 3 <span class="muted">${scores.quiz3.best}%</span></a>
          <a href="./complete.html" aria-current="${active==='complete'?'page':'false'}">Complete <span class="muted">${global}%</span></a>
        </nav>
        <div style="margin-top:12px" class="card">
          <div style="display:flex;justify-content:space-between;align-items:center"><strong>Progress</strong><small class="muted">${global}%</small></div>
          <div style="height:10px;border-radius:8px;background:rgba(255,255,255,0.02);margin-top:10px;overflow:hidden">
            <div style="height:100%;width:${global}%;background:linear-gradient(90deg,var(--accent),var(--accent2));transition:width .35s"></div>
          </div>
        </div>`;
      if(session.role === 'admin'){
        const open = getQuizOpen();
        const adminHtml = document.createElement('div');
        adminHtml.className = 'card';
        adminHtml.style.marginTop='12px';
        adminHtml.innerHTML = `
          <strong>Admin</strong>
          <div style="margin-top:8px;display:flex;flex-direction:column;gap:8px">
            <label><input type="checkbox" id="openQ1"> Quiz1 open</label>
            <label><input type="checkbox" id="openQ2"> Quiz2 open</label>
            <label><input type="checkbox" id="openQ3"> Quiz3 open</label>
            <button id="viewReports" class="btn btn-ghost">View Reports</button>
          </div>
          <div id="adminReports" style="margin-top:10px;max-height:180px;overflow:auto"></div>`;
        side.appendChild(adminHtml);
        document.getElementById('openQ1').checked = !!open.quiz1;
        document.getElementById('openQ2').checked = !!open.quiz2;
        document.getElementById('openQ3').checked = !!open.quiz3;
        document.getElementById('openQ1').addEventListener('change', e=>{ open.quiz1 = e.target.checked; setQuizOpen(open); });
        document.getElementById('openQ2').addEventListener('change', e=>{ open.quiz2 = e.target.checked; setQuizOpen(open); });
        document.getElementById('openQ3').addEventListener('change', e=>{ open.quiz3 = e.target.checked; setQuizOpen(open); });
        document.getElementById('viewReports').addEventListener('click', ()=>renderReports());
        renderReportsSummary();
      }
    }
  }

  function renderReportsSummary(){
    const el = document.getElementById('adminReports');
    if(!el) return;
    const r = getReports().slice(0,6);
    el.innerHTML = r.length ? r.map(rep=>`<div style="padding:8px;border-bottom:1px dashed rgba(255,255,255,0.02)"><strong>${rep.email}</strong> <div style="font-size:13px;color:var(--muted)">${rep.quizId} — ${rep.score}% — ${new Date(rep.ts).toLocaleString()}</div></div>`).join('') : '<div class="muted">No reports</div>';
  }

  function renderReports(){
    const el = document.getElementById('adminReports');
    if(!el) return;
    const arr = getReports();
    el.innerHTML = arr.length ? arr.map(rep=>`<div style="padding:8px;border-bottom:1px dashed rgba(255,255,255,0.02)"><div style="display:flex;justify-content:space-between"><strong>${rep.email}</strong><small class="muted">${new Date(rep.ts).toLocaleString()}</small></div><div style="font-size:13px;color:var(--muted)">${rep.quizId} — attempt ${rep.attempt} — ${rep.score}%</div></div>`).join('') : '<div class="muted">No reports</div>';
  }

  /* Expose */
  return {
    fetchUsers, setSession, getSession, clearSession, wireLogin,
    logout: () => { clearSession(); location.href='./index.html' },
    ensureScores, getScores, setScores, pushReport, getReports,
    getQuizOpen, setQuizOpen, renderChrome
  };
})();

/* Auto-wire login if form on page */
document.addEventListener('DOMContentLoaded', ()=>{ AUTH.wireLogin?.(); });

#js/forum.js

// js/forum.js - simple per-quiz forum stored in localStorage
const FORUM = (function(){
  const PREFIX = 'trial.forum.';
  function key(quizId){ return PREFIX + quizId; }
  function get(quizId){ return JSON.parse(localStorage.getItem(key(quizId)) || '[]'); }
  function save(quizId, arr){ localStorage.setItem(key(quizId), JSON.stringify(arr)); }

  function post(quizId, text){
    const s = AUTH.getSession(); if(!s) return alert('Please login to post.');
    if(!text || !text.trim()) return;
    const arr = get(quizId);
    arr.push({ id: Date.now()+'-'+Math.random().toString(36).slice(2,8), author: s.username || s.email, role: s.role, text: text.trim(), ts: Date.now() });
    save(quizId, arr);
    render(quizId);
  }
  function del(quizId, id){
    const s = AUTH.getSession(); if(!s || s.role !== 'admin') return alert('Only admin can delete posts.');
    const arr = get(quizId).filter(m=>m.id!==id); save(quizId, arr); render(quizId);
  }
  function render(quizId){
    const el = document.getElementById(quizId + '-forum-messages') || document.getElementById('forum-messages');
    if(!el) return;
    const arr = get(quizId);
    if(!arr.length){ el.innerHTML = '<div class="muted">No posts yet — start the discussion.</div>'; return; }
    el.innerHTML = arr.map(m=>`
      <div class="msg" data-id="${m.id}">
        <div class="meta"><strong>${escapeHtml(m.author)}</strong> <span class="muted">${m.role}</span> <small class="muted">${new Date(m.ts).toLocaleString()}</small></div>
        <div class="text">${escapeHtml(m.text)}</div>
        ${ (AUTH.getSession() && AUTH.getSession().role === 'admin') ? `<div style="margin-top:6px"><button data-del="${m.id}" class="btn btn-ghost">Delete</button></div>` : '' }
      </div>`).join('');
    // wire deletes
    el.querySelectorAll('button[data-del]').forEach(b=>{
      b.addEventListener('click', ()=>{ if(confirm('Delete post?')) del(quizId, b.getAttribute('data-del')); });
    });
  }
  function escapeHtml(s){ return String(s).replace(/[&<>"']/g, c=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;' }[c])); }

  return { post, render, get, del };
})();

#js/lms.js

// js/lms.js - shared helpers for progress widgets and small utilities
const LMS = (function(){
  function updateLinear(selector, percent){
    const el = document.querySelector(selector);
    if(!el) return;
    const bar = el.querySelector('.bar');
    if(bar) bar.style.width = `${Math.max(0,Math.min(100,percent))}%`;
    el.setAttribute('aria-valuenow', String(Math.round(percent)));
  }
  function updateCircular(selector, percent){
    const wrap = document.querySelector(selector);
    if(!wrap) return;
    const circle = wrap.querySelector('circle.progress-fill');
    if(!circle) return;
    const r = parseFloat(circle.getAttribute('r'));
    const c = 2 * Math.PI * r;
    circle.style.strokeDasharray = String(c);
    circle.style.strokeDashoffset = String(c * (1 - Math.max(0,Math.min(100,percent))/100));
    const label = wrap.querySelector('.value');
    if(label) label.textContent = `${Math.round(percent)}%`;
  }
  function updateStepper(containerSelector, completedSteps, total=4){
    const cont = document.querySelector(containerSelector);
    if(!cont) return;
    cont.innerHTML = '';
    for(let i=1;i<=total;i++){
      const div = document.createElement('div');
      div.className = 'step' + (i<=completedSteps ? ' done' : '');
      div.textContent = `Step ${i}`;
      cont.appendChild(div);
    }
  }
  function updateAnimated(selector, percent){
    const el = document.querySelector(selector);
    if(!el) return;
    const runner = el.querySelector('.runner');
    if(runner) runner.style.width = `${Math.max(0,Math.min(100,percent))}%`;
  }
  function globalPercentFor(email){
    const s = AUTH.getScores(email);
    if(!s) return 0;
    // s.quiz1.best, s.quiz2.best and s.quiz3.best are 0..100 (quiz %). Weighted: quiz1=40%, quiz2=30%, quiz3=30%
    return Math.round(( (s.quiz1.best * 0.4) + (s.quiz2.best * 0.3) + (s.quiz3.best * 0.3) ));
  }
  return { updateLinear, updateCircular, updateStepper, updateAnimated, globalPercentFor };
})();

#js/quiz.js

// js/quiz.js - handles quiz rendering, live feedback, attempts, scoring and admin report push
(function(){
  const MAX_ATTEMPTS = 3;
  const QUIZ_WEIGHT = { quiz1: 40, quiz2: 30, quiz3: 30 }; // weights for final calculation

  // Collect .question blocks from a container
  function collectQuestions(container){
    return Array.from(container.querySelectorAll('.question')).map(q => {
      return {
        el: q,
        name: q.getAttribute('data-name'),
        type: q.getAttribute('data-type') || 'radio',
        answerRaw: q.getAttribute('data-answer') || ''
      };
    });
  }

  // Evaluate one question and mark feedback
  function evaluateQuestion(q){
    const el = q.el;
    const type = q.type;
    const correct = q.answerRaw;
    const feedbackEl = el.querySelector('.feedback');
    feedbackEl.textContent = '';
    el.querySelectorAll('.option').forEach(o=>o.classList.remove('correct','wrong'));

    if(type === 'radio'){
      const sel = el.querySelector('input[type="radio"]:checked');
      if(!sel) return null;
      const val = sel.value;
      if(val === correct){
        sel.closest('.option').classList.add('correct');
        feedbackEl.textContent = 'Correct ✔';
        return true;
      } else {
        sel.closest('.option').classList.add('wrong');
        feedbackEl.textContent = 'Incorrect ✖';
        return false;
      }
    } else if(type === 'multi'){
      const checked = Array.from(el.querySelectorAll('input[type="checkbox"]:checked')).map(i=>i.value).sort();
      const expected = (''+correct).split('|').filter(Boolean).sort();
      el.querySelectorAll('.option').forEach(opt=>{
        const v = opt.querySelector('input').value;
        if(expected.includes(v) && checked.includes(v)) opt.classList.add('correct');
        else if(checked.includes(v) && !expected.includes(v)) opt.classList.add('wrong');
      });
      const isSame = checked.join('|') === expected.join('|');
      feedbackEl.textContent = isSame ? 'Correct ✔' : 'Incorrect ✖';
      return isSame;
    } else if(type === 'text'){
      const input = el.querySelector('input[type="text"]');
      const val = (input.value || '').trim().toLowerCase();
      const ok = val === (''+correct).trim().toLowerCase();
      feedbackEl.textContent = ok ? 'Correct ✔' : 'Check answer ✖';
      return ok;
    }
    return null;
  }

  // Grade all questions in a container
  function gradeAll(container){
    const qs = collectQuestions(container);
    let correct = 0;
    qs.forEach(q=>{
      const res = evaluateQuestion(q);
      if(res === true) correct++;
    });
    return qs.length === 0 ? 0 : Math.round((correct/qs.length)*100);
  }

  // Wire live feedback events
  function wireLive(container, quizId, widgets){
    collectQuestions(container).forEach(q=>{
      if(q.type === 'text'){
        q.el.querySelector('input[type="text"]').addEventListener('input', ()=>{
          evaluateQuestion(q);
          updateLiveProgress(container, quizId, widgets);
        });
      } else {
        q.el.querySelectorAll('input').forEach(i=>{
          i.addEventListener('change', ()=>{
            evaluateQuestion(q);
            updateLiveProgress(container, quizId, widgets);
          });
        });
      }
    });
  }

  // Update progress display
  function updateLiveProgress(container, quizId, widgets){
    const sess = AUTH.getSession();
    if(!sess) return;
    const thisQuizPercent = gradeAll(container);
    if(widgets.livePotential) widgets.livePotential.textContent = `${thisQuizPercent}% (this attempt)`;

    const scores = AUTH.getScores(sess.email);
    const q1 = quizId === 'quiz1' ? thisQuizPercent : scores.quiz1.best;
    const q2 = quizId === 'quiz2' ? thisQuizPercent : scores.quiz2.best;
    const q3 = quizId === 'quiz3' ? thisQuizPercent : scores.quiz3.best;
    const global = Math.round((q1*0.4)+(q2*0.3)+(q3*0.3));

    LMS.updateLinear('.linear', global);
    LMS.updateAnimated('.animated', global);
    LMS.updateCircular('.circular', global);
    LMS.updateStepper('.stepper', Math.round((global/100)*4));
    if(widgets.globalScore) widgets.globalScore.textContent = `${global}%`;
  }

  // Submit attempt
  function submitAttempt(container, quizId, widgets){
    const sess = AUTH.getSession(); if(!sess) return alert('Please login.');
    const open = AUTH.getQuizOpen();
    if(!open[quizId]) return alert('This quiz is currently closed by the administrator.');

    const scores = AUTH.getScores(sess.email);
    const current = scores[quizId] || {best:0, attempts:0};
    if(current.attempts >= MAX_ATTEMPTS) return alert('You have exhausted your attempts for this quiz.');

    const percent = gradeAll(container);
    const attempts = (current.attempts||0)+1;
    const best = Math.max(current.best||0, percent);
    scores[quizId] = {best, attempts};
    AUTH.setScores(sess.email, scores);
    AUTH.pushReport({ email:sess.email, quizId, attempt:attempts, score:percent, best, ts:Date.now() });

    if(widgets.attemptBadge) widgets.attemptBadge.textContent = `${attempts}/${MAX_ATTEMPTS}`;
    if(widgets.quizScore) widgets.quizScore.textContent = `${percent}% (best ${best}%)`;

    const global = LMS.globalPercentFor(sess.email);
    if(widgets.globalScore) widgets.globalScore.textContent = `${global}%`;
    LMS.updateLinear('.linear', global);
    LMS.updateAnimated('.animated', global);
    LMS.updateCircular('.circular', global);
    LMS.updateStepper('.stepper', Math.round((global/100)*4));

    if(attempts >= MAX_ATTEMPTS){
      disableInputs(container);
      alert('You have used all attempts for this quiz.');
    } else {
      alert(`Attempt recorded: ${percent}% (attempt ${attempts}/${MAX_ATTEMPTS})`);
    }
  }

  function disableInputs(container){
    container.querySelectorAll('input, button, textarea').forEach(el=>el.disabled=true);
  }

  // Initialize quiz in a container
  function initQuizPage(container, quizId){
    const sess = AUTH.getSession(); if(!sess) return location.href='./index.html';
    const open = AUTH.getQuizOpen();
    if(!open[quizId]){
      container.innerHTML = '<div class="card"><strong>Quiz currently closed by admin.</strong></div>';
      return;
    }

    // widgets inside same <main>
    const root = container.closest('main') || document;
    const widgets = {
      submitBtn: root.querySelector('.submitAttempt'),
      attemptBadge: root.querySelector('.attemptBadge'),
      quizScore: root.querySelector('.quizScore'),
      globalScore: root.querySelector('.globalScore'),
      livePotential: root.querySelector('.livePotential')
    };

    wireLive(container, quizId, widgets);

    if(widgets.submitBtn){
      widgets.submitBtn.addEventListener('click', ()=>submitAttempt(container, quizId, widgets));
    }

    const scores = AUTH.getScores(sess.email);
    const attempts = scores[quizId].attempts || 0;
    if(widgets.attemptBadge) widgets.attemptBadge.textContent = `${attempts}/${MAX_ATTEMPTS}`;
    if(widgets.quizScore) widgets.quizScore.textContent = `${scores[quizId].best||0}%`;

    if(attempts >= MAX_ATTEMPTS) disableInputs(container);

    const global = LMS.globalPercentFor(sess.email);
    if(widgets.globalScore) widgets.globalScore.textContent = `${global}%`;
    LMS.updateLinear('.linear', global);
    LMS.updateAnimated('.animated', global);
    LMS.updateCircular('.circular', global);
    LMS.updateStepper('.stepper', Math.round((global/100)*4));
  }

  window.Quiz = { initQuizPage, gradeAll, updateLiveProgress };
})();


#data/users.json

[
  { "email": "ayele.architect@gmail.com", "username":"admin", "password": "alliswell123", "role": "admin", "name":"Administrator" },
  { "email": "ayele.bedada@eiabc.edu.et", "username":"Ayele1", "password": "thesecond123", "role": "student", "name":"Ayele One" },
  { "email": "ayele.bedada@aau.edu.et", "username":"Ayele2", "password": "alliswell123", "role": "student", "name":"Ayele Two" }
]









